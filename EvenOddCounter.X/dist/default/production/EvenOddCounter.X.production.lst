

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Dec 27 10:51:59 2017

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F628A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0092                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009F                     	;# 
    88                           
    89                           	psect	idataBANK0
    90  0722                     __pidataBANK0:	
    91                           
    92                           ;initializer for _digits
    93  0722  34C0               	retlw	192
    94  0723  34F9               	retlw	249
    95  0724  34A4               	retlw	164
    96  0725  34B0               	retlw	176
    97  0726  3499               	retlw	153
    98  0727  3492               	retlw	146
    99  0728  3482               	retlw	130
   100  0729  34F8               	retlw	248
   101  072A  3480               	retlw	128
   102  072B  3490               	retlw	144
   103  0005                     _PORTAbits	set	5
   104  0006                     _PORTB	set	6
   105  0005                     _PORTA	set	5
   106  001F                     _CMCON	set	31
   107  0086                     _TRISB	set	134
   108  0085                     _TRISA	set	133
   109  008E                     _PCONbits	set	142
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  07E9                     start_initialization:	
   115  07E9                     __initialization:	
   116                           
   117                           ; Initialize objects allocated to BANK0
   118  07E9  2722               	fcall	__pidataBANK0	;fetch initializer
   119  07EA  00A0               	movwf	__pdataBANK0& (0+127)
   120  07EB  2723               	fcall	__pidataBANK0+1	;fetch initializer
   121  07EC  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   122  07ED  2724               	fcall	__pidataBANK0+2	;fetch initializer
   123  07EE  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   124  07EF  2725               	fcall	__pidataBANK0+3	;fetch initializer
   125  07F0  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   126  07F1  2726               	fcall	__pidataBANK0+4	;fetch initializer
   127  07F2  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   128  07F3  2727               	fcall	__pidataBANK0+5	;fetch initializer
   129  07F4  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   130  07F5  2728               	fcall	__pidataBANK0+6	;fetch initializer
   131  07F6  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   132  07F7  2729               	fcall	__pidataBANK0+7	;fetch initializer
   133  07F8  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   134  07F9  272A               	fcall	__pidataBANK0+8	;fetch initializer
   135  07FA  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   136  07FB  272B               	fcall	__pidataBANK0+9	;fetch initializer
   137  07FC  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   138                           
   139                           ; Clear objects allocated to COMMON
   140  07FD  01FC               	clrf	__pbssCOMMON& (0+127)
   141  07FE                     end_of_initialization:	
   142                           ;End of C runtime variable initialization code
   143                           
   144  07FE                     __end_of__initialization:	
   145  07FE  0183               	clrf	3
   146  07FF  2F81               	ljmp	_main	;jump to C main() function
   147                           
   148                           	psect	bssCOMMON
   149  007C                     __pbssCOMMON:	
   150  007C                     _currentNumber:	
   151  007C                     	ds	1
   152                           
   153                           	psect	dataBANK0
   154  0020                     __pdataBANK0:	
   155  0020                     _digits:	
   156  0020                     	ds	10
   157                           
   158                           	psect	cstackCOMMON
   159  0070                     __pcstackCOMMON:	
   160  0070                     ?_nextOdd:	
   161  0070                     ?_nextEven:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?_nextTriplet:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ?_printNumber:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     ??_printNumber:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0070                     ?_main:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  0070                     ?___lbmod:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  0070                     ___lbmod@divisor:	
   180                           ; 1 bytes @ 0x0
   181                           
   182                           
   183                           ; 1 bytes @ 0x0
   184  0070                     	ds	1
   185  0071                     ??___lbmod:	
   186                           
   187                           ; 1 bytes @ 0x1
   188  0071                     	ds	3
   189  0074                     ___lbmod@dividend:	
   190                           
   191                           ; 1 bytes @ 0x4
   192  0074                     	ds	1
   193  0075                     ___lbmod@counter:	
   194                           
   195                           ; 1 bytes @ 0x5
   196  0075                     	ds	1
   197  0076                     ___lbmod@rem:	
   198                           
   199                           ; 1 bytes @ 0x6
   200  0076                     	ds	1
   201  0077                     ??_nextOdd:	
   202  0077                     ??_nextEven:	
   203                           ; 1 bytes @ 0x7
   204                           
   205  0077                     ??_nextTriplet:	
   206                           ; 1 bytes @ 0x7
   207                           
   208                           
   209                           ; 1 bytes @ 0x7
   210  0077                     	ds	2
   211  0079                     ??_main:	
   212                           
   213                           ; 1 bytes @ 0x9
   214  0079                     	ds	3
   215                           
   216                           	psect	maintext
   217  0781                     __pmaintext:	
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 46 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   237 ;;      Params:         0       0       0       0
   238 ;;      Locals:         0       0       0       0
   239 ;;      Temps:          3       0       0       0
   240 ;;      Totals:         3       0       0       0
   241 ;;Total ram usage:        3 bytes
   242 ;; Hardware stack levels required when called:    2
   243 ;; This function calls:
   244 ;;		_nextEven
   245 ;;		_nextOdd
   246 ;;		_nextTriplet
   247 ;;		_printNumber
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0781                     _main:	
   256                           
   257                           ;main.c: 47: CMCON = 0x07;
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   261  0781  3007               	movlw	7
   262  0782  1283               	bcf	3,5	;RP0=0, select bank0
   263  0783  1303               	bcf	3,6	;RP1=0, select bank0
   264  0784  009F               	movwf	31	;volatile
   265                           
   266                           ;main.c: 48: PCONbits.OSCF = 1;
   267  0785  1683               	bsf	3,5	;RP0=1, select bank1
   268  0786  1303               	bcf	3,6	;RP1=0, select bank1
   269  0787  158E               	bsf	14,3	;volatile
   270                           
   271                           ;main.c: 50: TRISA = 0b00000111;
   272  0788  3007               	movlw	7
   273  0789  0085               	movwf	5	;volatile
   274                           
   275                           ;main.c: 51: TRISB = 0x00;
   276  078A  0186               	clrf	6	;volatile
   277                           
   278                           ;main.c: 53: PORTA = 0x00;
   279  078B  1283               	bcf	3,5	;RP0=0, select bank0
   280  078C  1303               	bcf	3,6	;RP1=0, select bank0
   281  078D  0185               	clrf	5	;volatile
   282                           
   283                           ;main.c: 54: PORTB = 0x00;
   284  078E  0186               	clrf	6	;volatile
   285  078F                     l644:	
   286                           ;main.c: 56: while (1) {
   287                           
   288                           
   289                           ;main.c: 57: if (PORTAbits.RA0 == 0) {
   290  078F  1283               	bcf	3,5	;RP0=0, select bank0
   291  0790  1303               	bcf	3,6	;RP1=0, select bank0
   292  0791  1805               	btfsc	5,0	;volatile
   293  0792  2FAE               	goto	l34
   294                           
   295                           ;main.c: 58: _delay((unsigned long)((10)*(4000000/4000.0)));
   296  0793  300D               	movlw	13
   297  0794  00FA               	movwf	??_main+1
   298  0795  30FB               	movlw	251
   299  0796  00F9               	movwf	??_main
   300  0797                     u237:	
   301  0797  0BF9               	decfsz	??_main,f
   302  0798  2F97               	goto	u237
   303  0799  0BFA               	decfsz	??_main+1,f
   304  079A  2F97               	goto	u237
   305  079B  2F9C               	nop2
   306                           
   307                           ;main.c: 60: if (PORTAbits.RA0 == 0) {
   308  079C  1283               	bcf	3,5	;RP0=0, select bank0
   309  079D  1303               	bcf	3,6	;RP1=0, select bank0
   310  079E  1805               	btfsc	5,0	;volatile
   311  079F  2FE7               	goto	l670
   312                           
   313                           ;main.c: 61: nextOdd();
   314  07A0  274C               	fcall	_nextOdd
   315                           
   316                           ;main.c: 63: _delay((unsigned long)((300)*(4000000/4000.0)));
   317  07A1  3002               	movlw	2
   318  07A2  00FB               	movwf	??_main+2
   319  07A3  3086               	movlw	134
   320  07A4  00FA               	movwf	??_main+1
   321  07A5  3099               	movlw	153
   322  07A6  00F9               	movwf	??_main
   323  07A7                     u247:	
   324  07A7  0BF9               	decfsz	??_main,f
   325  07A8  2FA7               	goto	u247
   326  07A9  0BFA               	decfsz	??_main+1,f
   327  07AA  2FA7               	goto	u247
   328  07AB  0BFB               	decfsz	??_main+2,f
   329  07AC  2FA7               	goto	u247
   330                           
   331                           ;main.c: 64: }
   332                           ;main.c: 65: }
   333  07AD  2FE7               	goto	l670
   334  07AE                     l34:	
   335                           
   336                           ;main.c: 66: else if (PORTAbits.RA1 == 0) {
   337  07AE  1885               	btfsc	5,1	;volatile
   338  07AF  2FCB               	goto	l37
   339                           
   340                           ;main.c: 67: _delay((unsigned long)((10)*(4000000/4000.0)));
   341  07B0  300D               	movlw	13
   342  07B1  00FA               	movwf	??_main+1
   343  07B2  30FB               	movlw	251
   344  07B3  00F9               	movwf	??_main
   345  07B4                     u257:	
   346  07B4  0BF9               	decfsz	??_main,f
   347  07B5  2FB4               	goto	u257
   348  07B6  0BFA               	decfsz	??_main+1,f
   349  07B7  2FB4               	goto	u257
   350  07B8  2FB9               	nop2
   351                           
   352                           ;main.c: 69: if (PORTAbits.RA1 == 0) {
   353  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   354  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   355  07BB  1885               	btfsc	5,1	;volatile
   356  07BC  2FE7               	goto	l670
   357                           
   358                           ;main.c: 70: nextEven();
   359  07BD  273A               	fcall	_nextEven
   360                           
   361                           ;main.c: 72: _delay((unsigned long)((300)*(4000000/4000.0)));
   362  07BE  3002               	movlw	2
   363  07BF  00FB               	movwf	??_main+2
   364  07C0  3086               	movlw	134
   365  07C1  00FA               	movwf	??_main+1
   366  07C2  3099               	movlw	153
   367  07C3  00F9               	movwf	??_main
   368  07C4                     u267:	
   369  07C4  0BF9               	decfsz	??_main,f
   370  07C5  2FC4               	goto	u267
   371  07C6  0BFA               	decfsz	??_main+1,f
   372  07C7  2FC4               	goto	u267
   373  07C8  0BFB               	decfsz	??_main+2,f
   374  07C9  2FC4               	goto	u267
   375                           
   376                           ;main.c: 73: }
   377                           ;main.c: 74: }
   378  07CA  2FE7               	goto	l670
   379  07CB                     l37:	
   380                           
   381                           ;main.c: 75: else if (PORTAbits.RA2 == 0) {
   382  07CB  1905               	btfsc	5,2	;volatile
   383  07CC  2FE7               	goto	l670
   384                           
   385                           ;main.c: 76: _delay((unsigned long)((10)*(4000000/4000.0)));
   386  07CD  300D               	movlw	13
   387  07CE  00FA               	movwf	??_main+1
   388  07CF  30FB               	movlw	251
   389  07D0  00F9               	movwf	??_main
   390  07D1                     u277:	
   391  07D1  0BF9               	decfsz	??_main,f
   392  07D2  2FD1               	goto	u277
   393  07D3  0BFA               	decfsz	??_main+1,f
   394  07D4  2FD1               	goto	u277
   395  07D5  2FD6               	nop2
   396                           
   397                           ;main.c: 78: if (PORTAbits.RA2 == 0) {
   398  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   399  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   400  07D8  1905               	btfsc	5,2	;volatile
   401  07D9  2FE7               	goto	l670
   402                           
   403                           ;main.c: 79: nextTriplet();
   404  07DA  272C               	fcall	_nextTriplet
   405                           
   406                           ;main.c: 81: _delay((unsigned long)((300)*(4000000/4000.0)));
   407  07DB  3002               	movlw	2
   408  07DC  00FB               	movwf	??_main+2
   409  07DD  3086               	movlw	134
   410  07DE  00FA               	movwf	??_main+1
   411  07DF  3099               	movlw	153
   412  07E0  00F9               	movwf	??_main
   413  07E1                     u287:	
   414  07E1  0BF9               	decfsz	??_main,f
   415  07E2  2FE1               	goto	u287
   416  07E3  0BFA               	decfsz	??_main+1,f
   417  07E4  2FE1               	goto	u287
   418  07E5  0BFB               	decfsz	??_main+2,f
   419  07E6  2FE1               	goto	u287
   420  07E7                     l670:	
   421                           
   422                           ;main.c: 82: }
   423                           ;main.c: 83: }
   424                           ;main.c: 85: printNumber();
   425  07E7  2719               	fcall	_printNumber
   426  07E8  2F8F               	goto	l644
   427  07E9                     __end_of_main:	
   428                           ;main.c: 86: }
   429                           ;main.c: 88: return;
   430                           
   431                           
   432                           	psect	text1
   433  0719                     __ptext1:	
   434 ;; *************** function _printNumber *****************
   435 ;; Defined at:
   436 ;;		line 114 in file "main.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   450 ;;      Params:         0       0       0       0
   451 ;;      Locals:         0       0       0       0
   452 ;;      Temps:          0       0       0       0
   453 ;;      Totals:         0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _printNumber
   465  0719                     _printNumber:	
   466                           
   467                           ;main.c: 115: PORTB = digits[currentNumber];
   468                           
   469                           ;incstack = 0
   470                           ; Regs used in _printNumber: [wreg-fsr0h+status,2+status,0]
   471  0719  087C               	movf	_currentNumber,w
   472  071A  3E20               	addlw	(low (_digits| 0))& (0+255)
   473  071B  0084               	movwf	4
   474  071C  1383               	bcf	3,7	;select IRP bank0
   475  071D  0800               	movf	0,w
   476  071E  1283               	bcf	3,5	;RP0=0, select bank0
   477  071F  1303               	bcf	3,6	;RP1=0, select bank0
   478  0720  0086               	movwf	6	;volatile
   479  0721  0008               	return
   480  0722                     __end_of_printNumber:	
   481                           
   482                           	psect	text2
   483  072C                     __ptext2:	
   484 ;; *************** function _nextTriplet *****************
   485 ;; Defined at:
   486 ;;		line 109 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   500 ;;      Params:         0       0       0       0
   501 ;;      Locals:         0       0       0       0
   502 ;;      Temps:          2       0       0       0
   503 ;;      Totals:         2       0       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    1
   507 ;; This function calls:
   508 ;;		___lbmod
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _nextTriplet
   516  072C                     _nextTriplet:	
   517                           
   518                           ;main.c: 110: currentNumber += 3;
   519                           
   520                           ;incstack = 0
   521                           ; Regs used in _nextTriplet: [wreg+status,2+status,0+pclath+cstack]
   522  072C  3003               	movlw	3
   523  072D  00F7               	movwf	??_nextTriplet
   524  072E  0877               	movf	??_nextTriplet,w
   525  072F  07FC               	addwf	_currentNumber,f
   526                           
   527                           ;main.c: 111: currentNumber %= 10;
   528  0730  300A               	movlw	10
   529  0731  00F7               	movwf	??_nextTriplet
   530  0732  0877               	movf	??_nextTriplet,w
   531  0733  00F0               	movwf	___lbmod@divisor
   532  0734  087C               	movf	_currentNumber,w
   533  0735  275E               	fcall	___lbmod
   534  0736  00F8               	movwf	??_nextTriplet+1
   535  0737  0878               	movf	??_nextTriplet+1,w
   536  0738  00FC               	movwf	_currentNumber
   537  0739  0008               	return
   538  073A                     __end_of_nextTriplet:	
   539                           
   540                           	psect	text3
   541  074C                     __ptext3:	
   542 ;; *************** function _nextOdd *****************
   543 ;; Defined at:
   544 ;;		line 91 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   558 ;;      Params:         0       0       0       0
   559 ;;      Locals:         0       0       0       0
   560 ;;      Temps:          2       0       0       0
   561 ;;      Totals:         2       0       0       0
   562 ;;Total ram usage:        2 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    1
   565 ;; This function calls:
   566 ;;		___lbmod
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _nextOdd
   574  074C                     _nextOdd:	
   575                           
   576                           ;main.c: 92: if (currentNumber % 2 != 1)
   577                           
   578                           ;incstack = 0
   579                           ; Regs used in _nextOdd: [wreg+status,2+status,0+pclath+cstack]
   580  074C  187C               	btfsc	_currentNumber,0
   581  074D  2F50               	goto	l616
   582                           
   583                           ;main.c: 93: currentNumber++;
   584  074E  3001               	movlw	1
   585  074F  2F51               	goto	L1
   586  0750                     l616:	
   587                           
   588                           ;main.c: 94: else
   589                           ;main.c: 95: currentNumber += 2;
   590  0750  3002               	movlw	2
   591  0751                     L1:	
   592  0751  00F7               	movwf	??_nextOdd
   593  0752  0877               	movf	??_nextOdd,w
   594  0753  07FC               	addwf	_currentNumber,f
   595                           
   596                           ;main.c: 97: currentNumber %= 10;
   597  0754  300A               	movlw	10
   598  0755  00F7               	movwf	??_nextOdd
   599  0756  0877               	movf	??_nextOdd,w
   600  0757  00F0               	movwf	___lbmod@divisor
   601  0758  087C               	movf	_currentNumber,w
   602  0759  275E               	fcall	___lbmod
   603  075A  00F8               	movwf	??_nextOdd+1
   604  075B  0878               	movf	??_nextOdd+1,w
   605  075C  00FC               	movwf	_currentNumber
   606  075D  0008               	return
   607  075E                     __end_of_nextOdd:	
   608                           
   609                           	psect	text4
   610  073A                     __ptext4:	
   611 ;; *************** function _nextEven *****************
   612 ;; Defined at:
   613 ;;		line 100 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   627 ;;      Params:         0       0       0       0
   628 ;;      Locals:         0       0       0       0
   629 ;;      Temps:          2       0       0       0
   630 ;;      Totals:         2       0       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    1
   634 ;; This function calls:
   635 ;;		___lbmod
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _nextEven
   643  073A                     _nextEven:	
   644                           
   645                           ;main.c: 101: if (currentNumber % 2 != 0)
   646                           
   647                           ;incstack = 0
   648                           ; Regs used in _nextEven: [wreg+status,2+status,0+pclath+cstack]
   649  073A  1C7C               	btfss	_currentNumber,0
   650  073B  2F3E               	goto	l624
   651                           
   652                           ;main.c: 102: currentNumber++;
   653  073C  3001               	movlw	1
   654  073D  2F3F               	goto	L2
   655  073E                     l624:	
   656                           
   657                           ;main.c: 103: else
   658                           ;main.c: 104: currentNumber += 2;
   659  073E  3002               	movlw	2
   660  073F                     L2:	
   661  073F  00F7               	movwf	??_nextEven
   662  0740  0877               	movf	??_nextEven,w
   663  0741  07FC               	addwf	_currentNumber,f
   664                           
   665                           ;main.c: 106: currentNumber %= 10;
   666  0742  300A               	movlw	10
   667  0743  00F7               	movwf	??_nextEven
   668  0744  0877               	movf	??_nextEven,w
   669  0745  00F0               	movwf	___lbmod@divisor
   670  0746  087C               	movf	_currentNumber,w
   671  0747  275E               	fcall	___lbmod
   672  0748  00F8               	movwf	??_nextEven+1
   673  0749  0878               	movf	??_nextEven+1,w
   674  074A  00FC               	movwf	_currentNumber
   675  074B  0008               	return
   676  074C                     __end_of_nextEven:	
   677                           
   678                           	psect	text5
   679  075E                     __ptext5:	
   680 ;; *************** function ___lbmod *****************
   681 ;; Defined at:
   682 ;;		line 4 in file "D:\Microchip\xc8\v1.45\sources\common\lbmod.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  dividend        1    wreg     unsigned char 
   685 ;;  divisor         1    0[COMMON] unsigned char 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  dividend        1    4[COMMON] unsigned char 
   688 ;;  rem             1    6[COMMON] unsigned char 
   689 ;;  counter         1    5[COMMON] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      unsigned char 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   699 ;;      Params:         1       0       0       0
   700 ;;      Locals:         3       0       0       0
   701 ;;      Temps:          3       0       0       0
   702 ;;      Totals:         7       0       0       0
   703 ;;Total ram usage:        7 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_nextOdd
   709 ;;		_nextEven
   710 ;;		_nextTriplet
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function ___lbmod
   716  075E                     ___lbmod:	
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
   720                           ;___lbmod@dividend stored from wreg
   721  075E  00F4               	movwf	___lbmod@dividend
   722  075F  3008               	movlw	8
   723  0760  00F1               	movwf	??___lbmod
   724  0761  0871               	movf	??___lbmod,w
   725  0762  00F5               	movwf	___lbmod@counter
   726  0763  01F6               	clrf	___lbmod@rem
   727  0764                     l600:	
   728  0764  0874               	movf	___lbmod@dividend,w
   729  0765  00F1               	movwf	??___lbmod
   730  0766  3007               	movlw	7
   731  0767                     u125:	
   732  0767  1003               	clrc
   733  0768  0CF1               	rrf	??___lbmod,f
   734  0769  3EFF               	addlw	-1
   735  076A  1D03               	skipz
   736  076B  2F67               	goto	u125
   737  076C  0876               	movf	___lbmod@rem,w
   738  076D  00F2               	movwf	??___lbmod+1
   739  076E  0772               	addwf	??___lbmod+1,w
   740  076F  0471               	iorwf	??___lbmod,w
   741  0770  00F3               	movwf	??___lbmod+2
   742  0771  0873               	movf	??___lbmod+2,w
   743  0772  00F6               	movwf	___lbmod@rem
   744  0773  1003               	clrc
   745  0774  0DF4               	rlf	___lbmod@dividend,f
   746  0775  0870               	movf	___lbmod@divisor,w
   747  0776  0276               	subwf	___lbmod@rem,w
   748  0777  1C03               	skipc
   749  0778  2F7B               	goto	l413
   750  0779  0870               	movf	___lbmod@divisor,w
   751  077A  02F6               	subwf	___lbmod@rem,f
   752  077B                     l413:	
   753  077B  3001               	movlw	1
   754  077C  02F5               	subwf	___lbmod@counter,f
   755  077D  1D03               	btfss	3,2
   756  077E  2F64               	goto	l600
   757  077F  0876               	movf	___lbmod@rem,w
   758  0780  0008               	return
   759  0781                     __end_of___lbmod:	
   760  007E                     btemp	set	126	;btemp
   761  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0      10
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_nextEven
    _main->_nextOdd
    _main->_nextTriplet
    _nextTriplet->___lbmod
    _nextOdd->___lbmod
    _nextEven->___lbmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     954
                                              9 COMMON     3     3      0
                           _nextEven
                            _nextOdd
                        _nextTriplet
                        _printNumber
 ---------------------------------------------------------------------------------
 (1) _printNumber                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nextTriplet                                          2     2      0     318
                                              7 COMMON     2     2      0
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _nextOdd                                              2     2      0     318
                                              7 COMMON     2     2      0
                            ___lbmod
 ---------------------------------------------------------------------------------
 (1) _nextEven                                             2     2      0     318
                                              7 COMMON     2     2      0
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              7     6      1     318
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _nextEven
     ___lbmod
   _nextOdd
     ___lbmod
   _nextTriplet
     ___lbmod
   _printNumber

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       3       12.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      17      10        0.0%
ABS                  0      0      17       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Dec 27 10:51:59 2017

            __CFG_CP$OFF 0000                       l34 07AE                       l37 07CB  
                    l413 077B                      l600 0764                      l624 073E  
                    l616 0750                      l644 078F                      l670 07E7  
                    u125 0767                      u237 0797                      u247 07A7  
                    u257 07B4             __CFG_CPD$OFF 0000                      u267 07C4  
                    u277 07D1                      u287 07E1                      fsr0 0004  
                    indf 0000             __CFG_LVP$OFF 0000                     _main 0781  
                   btemp 007E                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000          __end_of___lbmod 0781                    _CMCON 001F  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086          __end_of_nextOdd 075E           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07E9             __end_of_main 07E9                   ??_main 0079  
           ?_nextTriplet 0070           __CFG_PWRTE$OFF 0000                ??___lbmod 0071  
                 _digits 0020         __end_of_nextEven 074C                ??_nextOdd 0077  
           ?_printNumber 0070          ___lbmod@divisor 0070  __end_of__initialization 07FE  
        ___lbmod@counter 0075           __pcstackCOMMON 0070             __pidataBANK0 0722  
          _currentNumber 007C               __pmaintext 0781     __size_of_nextTriplet 000E  
              ?_nextEven 0070                  ___lbmod 075E                  __ptext1 0719  
                __ptext2 072C                  __ptext3 074C                  __ptext4 073A  
                __ptext5 075E                  _nextOdd 074C     end_of_initialization 07FE  
   __size_of_printNumber 0009               ??_nextEven 0077                _PORTAbits 0005  
       ___lbmod@dividend 0074              ___lbmod@rem 0076      start_initialization 07E9  
            __pdataBANK0 0020              __pbssCOMMON 007C                ___latbits 0000  
      __size_of_nextEven 0012                 ?___lbmod 0070            ??_nextTriplet 0077  
               ?_nextOdd 0070                 _PCONbits 008E            ??_printNumber 0070  
    __end_of_nextTriplet 073A         __size_of___lbmod 0023         __size_of_nextOdd 0012  
          __size_of_main 0068      __end_of_printNumber 0722                 _nextEven 073A  
            _nextTriplet 072C              _printNumber 0719       __CFG_FOSC$INTOSCIO 0000  
